buildscript {
	ext {
		kotlinVersion = '1.2.10'
		springBootVersion = '2.0.0.M6'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.tradeninja'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url "http://repository.jetbrains.com/kotlin-nosql" }
}
dependencies {
	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:1.2.10")
	compile("org.jetbrains.kotlin:kotlin-reflect")

//	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-webflux')
//	compile('org.springframework.boot:spring-boot-starter-websocket')

	runtime('org.springframework.boot:spring-boot-devtools')

//	compile('org.springframework.boot:spring-boot-starter-data-jpa')
//	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
//	compile ('org.jetbrains.kotlin:kotlin-nosql-mongodb:0.1-SNAPSHOT')
//	runtime('com.h2database:h2')
//	runtime('org.postgresql:postgresql')

//	compile('org.springframework.boot:spring-boot-starter-actuator')
//	compile('org.springframework.boot:spring-boot-starter-cache')
//	compile('org.springframework.boot:spring-boot-starter-hateoas')
//	compile('org.springframework.boot:spring-boot-starter-jta-atomikos')
//	compile('org.springframework.boot:spring-boot-starter-security')
//	compile('org.springframework.session:spring-session-core')
	compileOnly('org.springframework.boot:spring-boot-configuration-processor')

	testCompile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('io.projectreactor:reactor-test')
//	testCompile('io.projectreactor:reactor-test')
//	testCompile('org.springframework.security:spring-security-test')
}


